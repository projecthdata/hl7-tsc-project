<?xml version="1.0" encoding="UTF-8"?>
<!--
This file was generated by Altova MapForce 2010

YOU SHOULD NOT MODIFY THIS FILE, BECAUSE IT WILL BE
OVERWRITTEN WHEN YOU RE-RUN CODE GENERATION.

Refer to the Altova MapForce Documentation for further details.
http://www.altova.com/mapforce
-->
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:ns0="http://projecthdata.org/hdata/schemas/2009/06/core" xmlns:ns1="http://projecthdata.org/hdata/schemas/2009/06/patient_information" xmlns:xs="http://www.w3.org/2001/XMLSchema" exclude-result-prefixes="ns0 ns1 xs">
	<xsl:output method="xml" encoding="UTF-8" indent="yes"/>
	<xsl:template match="/">
		<xsl:variable name="var1_instance_patient" select="."/>
		<ClinicalDocument xmlns="urn:hl7-org:v3" xmlns:sdtc="urn:hl7-org:sdtc">
			<xsl:attribute name="xsi:schemaLocation" namespace="http://www.w3.org/2001/XMLSchema-instance">
				<xsl:value-of select="'urn:hl7-org:v3 Z:/projects/hl7-tsc-project/l32-schemas/L32_ClinicalDocument.xsd'"/>
			</xsl:attribute>
			<recordTarget>
				<patientRole>
					<addr>
						<xsl:for-each select="$var1_instance_patient/ns1:patient/ns0:address/ns0:streetAddress">
							<xsl:variable name="var2_streetAddress" select="."/>
							<streetAddressLine>
								<xsl:value-of select="string($var2_streetAddress)"/>
							</streetAddressLine>
						</xsl:for-each>
						<xsl:for-each select="$var1_instance_patient/ns1:patient/ns0:address">
							<xsl:variable name="var4_address" select="."/>
							<city>
								<xsl:value-of select="string($var4_address/ns0:city)"/>
							</city>
						</xsl:for-each>
						<xsl:for-each select="$var1_instance_patient/ns1:patient/ns0:address/ns0:stateOrProvince">
							<xsl:variable name="var6_stateOrProvince" select="."/>
							<state>
								<xsl:value-of select="string($var6_stateOrProvince)"/>
							</state>
						</xsl:for-each>
						<xsl:for-each select="$var1_instance_patient/ns1:patient/ns0:address/ns0:zip">
							<xsl:variable name="var8_zip" select="."/>
							<postalCode>
								<xsl:value-of select="string($var8_zip)"/>
							</postalCode>
						</xsl:for-each>
						<xsl:for-each select="$var1_instance_patient/ns1:patient/ns0:address/ns0:country">
							<xsl:variable name="var10_country" select="."/>
							<country>
								<xsl:value-of select="string($var10_country)"/>
							</country>
						</xsl:for-each>
					</addr>
					<xsl:for-each select="$var1_instance_patient/ns1:patient/ns0:telecom">
						<xsl:variable name="var12_telecom" select="."/>
						<telecom>
							<xsl:attribute name="use" namespace="">
								<xsl:value-of select="string($var12_telecom/@use)"/>
							</xsl:attribute>
							<xsl:attribute name="value" namespace="">
								<xsl:value-of select="string($var12_telecom/@value)"/>
							</xsl:attribute>
						</telecom>
					</xsl:for-each>
					<patient>
						<name>
							<xsl:for-each select="$var1_instance_patient/ns1:patient/ns0:name/ns0:title">
								<xsl:variable name="var14_title" select="."/>
								<prefix>
									<xsl:value-of select="string($var14_title)"/>
								</prefix>
							</xsl:for-each>
							<xsl:for-each select="$var1_instance_patient/ns1:patient/ns0:name/ns0:given">
								<xsl:variable name="var16_given" select="."/>
								<given>
									<xsl:value-of select="string($var16_given)"/>
								</given>
							</xsl:for-each>
							<xsl:for-each select="$var1_instance_patient/ns1:patient/ns0:name/ns0:lastname">
								<xsl:variable name="var18_lastname" select="."/>
								<family>
									<xsl:value-of select="string($var18_lastname)"/>
								</family>
							</xsl:for-each>
							<xsl:for-each select="$var1_instance_patient/ns1:patient/ns0:name/ns0:suffix">
								<xsl:variable name="var20_suffix" select="."/>
								<suffix>
									<xsl:value-of select="string($var20_suffix)"/>
								</suffix>
							</xsl:for-each>
						</name>
						<administrativeGenderCode>
							<xsl:for-each select="$var1_instance_patient/ns1:patient/ns1:gender">
								<xsl:variable name="var22_gender" select="."/>
								<xsl:attribute name="code" namespace="">
									<xsl:value-of select="string($var22_gender/@code)"/>
								</xsl:attribute>
							</xsl:for-each>
							<xsl:for-each select="$var1_instance_patient/ns1:patient/ns1:gender">
								<xsl:variable name="var24_gender" select="."/>
								<xsl:if test="$var24_gender/@displayName">
									<xsl:attribute name="displayName" namespace="">
										<xsl:value-of select="string($var24_gender/@displayName)"/>
									</xsl:attribute>
								</xsl:if>
							</xsl:for-each>
							<xsl:for-each select="$var1_instance_patient/ns1:patient/ns1:gender">
								<xsl:variable name="var26_gender" select="."/>
								<xsl:if test="$var26_gender/@codeSystemName">
									<xsl:attribute name="codeSystemName" namespace="">
										<xsl:value-of select="string($var26_gender/@codeSystemName)"/>
									</xsl:attribute>
								</xsl:if>
							</xsl:for-each>
							<xsl:for-each select="$var1_instance_patient/ns1:patient/ns1:gender">
								<xsl:variable name="var28_gender" select="."/>
								<xsl:attribute name="codeSystem" namespace="">
									<xsl:value-of select="string($var28_gender/@codeSystem)"/>
								</xsl:attribute>
							</xsl:for-each>
						</administrativeGenderCode>
						<birthTime>
							<xsl:for-each select="$var1_instance_patient/ns1:patient/ns1:birthtime">
								<xsl:variable name="var30_birthtime" select="."/>
								<xsl:attribute name="value" namespace="">
									<xsl:value-of select="concat(concat(concat(concat(substring(string($var30_birthtime), 1, 4), substring(string($var30_birthtime), 6, 2)), substring(string($var30_birthtime), 9, 2)), substring(string($var30_birthtime), 12, 2)), substring(string($var30_birthtime), 15, 2))"/>
								</xsl:attribute>
							</xsl:for-each>
						</birthTime>
						<maritalStatusCode>
							<xsl:for-each select="$var1_instance_patient/ns1:patient/ns1:maritialStatus">
								<xsl:variable name="var32_maritialStatus" select="."/>
								<xsl:attribute name="code" namespace="">
									<xsl:value-of select="string($var32_maritialStatus/@code)"/>
								</xsl:attribute>
							</xsl:for-each>
							<xsl:for-each select="$var1_instance_patient/ns1:patient/ns1:maritialStatus">
								<xsl:variable name="var34_maritialStatus" select="."/>
								<xsl:if test="$var34_maritialStatus/@displayName">
									<xsl:attribute name="displayName" namespace="">
										<xsl:value-of select="string($var34_maritialStatus/@displayName)"/>
									</xsl:attribute>
								</xsl:if>
							</xsl:for-each>
							<xsl:for-each select="$var1_instance_patient/ns1:patient/ns1:maritialStatus">
								<xsl:variable name="var36_maritialStatus" select="."/>
								<xsl:if test="$var36_maritialStatus/@codeSystemName">
									<xsl:attribute name="codeSystemName" namespace="">
										<xsl:value-of select="string($var36_maritialStatus/@codeSystemName)"/>
									</xsl:attribute>
								</xsl:if>
							</xsl:for-each>
							<xsl:for-each select="$var1_instance_patient/ns1:patient/ns1:maritialStatus">
								<xsl:variable name="var38_maritialStatus" select="."/>
								<xsl:attribute name="codeSystem" namespace="">
									<xsl:value-of select="string($var38_maritialStatus/@codeSystem)"/>
								</xsl:attribute>
							</xsl:for-each>
						</maritalStatusCode>
						<raceCode>
							<xsl:for-each select="$var1_instance_patient/ns1:patient/ns1:race">
								<xsl:variable name="var40_race" select="."/>
								<xsl:attribute name="code" namespace="">
									<xsl:value-of select="string($var40_race/@code)"/>
								</xsl:attribute>
							</xsl:for-each>
							<xsl:for-each select="$var1_instance_patient/ns1:patient/ns1:race">
								<xsl:variable name="var42_race" select="."/>
								<xsl:if test="$var42_race/@displayName">
									<xsl:attribute name="displayName" namespace="">
										<xsl:value-of select="string($var42_race/@displayName)"/>
									</xsl:attribute>
								</xsl:if>
							</xsl:for-each>
							<xsl:for-each select="$var1_instance_patient/ns1:patient/ns1:race">
								<xsl:variable name="var44_race" select="."/>
								<xsl:if test="$var44_race/@codeSystemName">
									<xsl:attribute name="codeSystemName" namespace="">
										<xsl:value-of select="string($var44_race/@codeSystemName)"/>
									</xsl:attribute>
								</xsl:if>
							</xsl:for-each>
							<xsl:for-each select="$var1_instance_patient/ns1:patient/ns1:race">
								<xsl:variable name="var46_race" select="."/>
								<xsl:attribute name="codeSystem" namespace="">
									<xsl:value-of select="string($var46_race/@codeSystem)"/>
								</xsl:attribute>
							</xsl:for-each>
						</raceCode>
					</patient>
				</patientRole>
			</recordTarget>
		</ClinicalDocument>
	</xsl:template>
</xsl:stylesheet>
