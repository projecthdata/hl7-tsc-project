<?xml version="1.0" encoding="UTF-8"?>
<!--
This file was generated by Altova MapForce 2010

YOU SHOULD NOT MODIFY THIS FILE, BECAUSE IT WILL BE
OVERWRITTEN WHEN YOU RE-RUN CODE GENERATION.

Refer to the Altova MapForce Documentation for further details.
http://www.altova.com/mapforce
-->
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:tbf="http://www.altova.com/MapForce/UDF/tbf" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:ns0="urn:hl7-org:v3" exclude-result-prefixes="tbf xs ns0">
	<xsl:template name="tbf:tbf1_instanceIdentifier">
		<xsl:param name="input" select="/.."/>
		<xsl:for-each select="$input/@root">
			<xsl:variable name="var2_current" select="."/>
			<xsl:attribute name="root">
				<xsl:value-of select="string($var2_current)"/>
			</xsl:attribute>
		</xsl:for-each>
		<xsl:for-each select="$input/@extension">
			<xsl:variable name="var4_current" select="."/>
			<xsl:attribute name="extension">
				<xsl:value-of select="string($var4_current)"/>
			</xsl:attribute>
		</xsl:for-each>
	</xsl:template>
	<xsl:output method="xml" encoding="UTF-8" indent="yes"/>
	<xsl:template match="/">
		<xsl:variable name="var1_instance_L32_ClinicalDocument" select="."/>
		<result xmlns="http://projecthdata.org/hdata/schemas/2009/06/result" xmlns:core="http://projecthdata.org/hdata/schemas/2009/06/core">
			<xsl:attribute name="xsi:schemaLocation" namespace="http://www.w3.org/2001/XMLSchema-instance">
				<xsl:value-of select="'http://projecthdata.org/hdata/schemas/2009/06/result Z:/projects/hl7-tsc-project/hdata-schemas/result.xsd'"/>
			</xsl:attribute>
			<xsl:for-each select="$var1_instance_L32_ClinicalDocument/ns0:ClinicalDocument/ns0:component/ns0:structuredBody/ns0:component/ns0:section/ns0:entry/ns0:organizer/ns0:component/ns0:observation">
				<xsl:variable name="var2_observation" select="."/>
				<resultId>
					<xsl:call-template name="tbf:tbf1_instanceIdentifier">
						<xsl:with-param name="input" select="$var2_observation/ns0:id"/>
					</xsl:call-template>
				</resultId>
			</xsl:for-each>
			<resultDateTime>
				<xsl:for-each select="$var1_instance_L32_ClinicalDocument/ns0:ClinicalDocument/ns0:component/ns0:structuredBody/ns0:component/ns0:section/ns0:entry/ns0:organizer/ns0:component/ns0:observation">
					<xsl:variable name="var4_observation" select="."/>
					<xsl:if test="$var4_observation/ns0:effectiveTime/@value">
						<xsl:attribute name="low" namespace="">
							<xsl:value-of select="concat(concat(concat(concat(concat(concat(concat(concat(concat(concat(concat(substring(string($var4_observation/ns0:effectiveTime/@value), 1, 4), '-'), substring(string($var4_observation/ns0:effectiveTime/@value), 5, 2)), '-'), substring(string($var4_observation/ns0:effectiveTime/@value), 7, 2)), 'T'), substring(concat(substring(string($var4_observation/ns0:effectiveTime/@value), 9, 2), '00'), 1, 2)), ':'), substring(concat(substring(string($var4_observation/ns0:effectiveTime/@value), 11, 2), '00'), 1, 2)), ':'), substring(concat(substring(string($var4_observation/ns0:effectiveTime/@value), 13, 2), '00'), 1, 2)), 'Z')"/>
						</xsl:attribute>
					</xsl:if>
				</xsl:for-each>
			</resultDateTime>
			<xsl:for-each select="$var1_instance_L32_ClinicalDocument/ns0:ClinicalDocument/ns0:component/ns0:structuredBody/ns0:component/ns0:section/ns0:entry/ns0:organizer/ns0:component/ns0:observation">
				<xsl:variable name="var6_observation" select="."/>
				<resultType>
					<xsl:if test="$var6_observation/ns0:code/@code">
						<xsl:attribute name="code" namespace="">
							<xsl:value-of select="string($var6_observation/ns0:code/@code)"/>
						</xsl:attribute>
					</xsl:if>
					<xsl:if test="$var6_observation/ns0:code/@codeSystem">
						<xsl:attribute name="codeSystem" namespace="">
							<xsl:value-of select="string($var6_observation/ns0:code/@codeSystem)"/>
						</xsl:attribute>
					</xsl:if>
					<xsl:if test="$var6_observation/ns0:code/@codeSystemName">
						<xsl:attribute name="codeSystemName" namespace="">
							<xsl:value-of select="string($var6_observation/ns0:code/@codeSystemName)"/>
						</xsl:attribute>
					</xsl:if>
					<xsl:if test="$var6_observation/ns0:code/@displayName">
						<xsl:attribute name="displayName" namespace="">
							<xsl:value-of select="string($var6_observation/ns0:code/@displayName)"/>
						</xsl:attribute>
					</xsl:if>
				</resultType>
			</xsl:for-each>
			<resultStatus>
				<xsl:for-each select="$var1_instance_L32_ClinicalDocument/ns0:ClinicalDocument/ns0:component/ns0:structuredBody/ns0:component/ns0:section/ns0:entry/ns0:organizer/ns0:component/ns0:observation">
					<xsl:variable name="var8_observation" select="."/>
					<xsl:if test="$var8_observation/ns0:statusCode/@code">
						<xsl:attribute name="code" namespace="">
							<xsl:value-of select="string($var8_observation/ns0:statusCode/@code)"/>
						</xsl:attribute>
					</xsl:if>
				</xsl:for-each>
			</resultStatus>
			<resultValue>
                <value>
                    <xsl:value-of select="//ns0:value/@value"/>
                </value>
                <units>
                    <xsl:value-of select="//ns0:value/@unit"/>
                </units>
		    </resultValue>
		</result>
	</xsl:template>
</xsl:stylesheet>
